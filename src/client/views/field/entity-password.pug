path: /<entity>/fields/<field>/valuePath
label: /<entity>/fields/<field>/label
placeholder: /<entity>/fields/<field>/placeholder
value: <path>/value
storedValueList: /<entity>/list/<id>/<field>
storedValueRoot: /<entity>/<field>
error: <path>/error
submit: /<entity>/fields/<field>/submitPath
---
disabled nolabel nolist
---
.mb3.measure(data-name="entity-password")
  heading-label(v-if="!nolabel && label", :for="'field-' + path", :text="label")

  p(v-if="error && error.isSubmitted") {{ error.message }}

  //- because vue uses v-model literal it cannot contain a conditional
  //- and as such we need to create more inputs
  input.ba.pa2.mb2.db.w-100.bfg-n1(
    v-if="value !== undefined",
    type="password",
    :id="'field-' + path",
    :placeholder="placeholder",
    :data-patch="'add ' + (path + '/value') + ' attr.value' + (submit ? ' ; remove ' + submit  : '')"
    v-model="value",
    :disabled="disabled",
    :class="!!error ? 'b--d5' : 'b--n2'"
  )
  input.ba.pa2.mb2.db.w-100.bfg-n1(
    v-else-if="nolist",
    type="password",
    :id="'field-' + path",
    :placeholder="placeholder",
    :data-patch="'add ' + (path + '/value') + ' attr.value' + (submit ? ' ; remove ' + submit  : '')"
    v-model="storedValueRoot",
    :disabled="disabled",
    :class="!!error ? 'b--d5' : 'b--n2'"
  )
  input.ba.pa2.mb2.db.w-100.bfg-n1(
    v-else,
    type="password",
    :id="'field-' + path",
    :placeholder="placeholder",
    :data-patch="'add ' + (path + '/value') + ' attr.value' + (submit ? ' ; remove ' + submit  : '')"
    v-model="storedValueList",
    :disabled="disabled",
    :class="!!error ? 'b--d5' : 'b--n2'"
  )
